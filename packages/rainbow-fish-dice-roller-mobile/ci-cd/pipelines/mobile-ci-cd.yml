name: Rainbow Fish Dice Roller Mobile CI/CD

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/rainbow-fish-dice-roller-mobile/**'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/rainbow-fish-dice-roller-mobile/**'

env:
  NODE_VERSION: '18.x'
  JAVA_VERSION: '17'
  XCODE_VERSION: '15.1'

jobs:
  # Shared code layer tests
  test-shared:
    name: Test Shared Code Layer
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/shared
          npm ci

      - name: Run linting
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/shared
          npm run lint

      - name: Run type checking
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/shared
          npm run type-check

      - name: Run tests
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/shared
          npm run test:coverage

      - name: Build shared layer
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/shared
          npm run build

      - name: Upload coverage reports
        uses: codecov/codecov-action@v3
        with:
          file: packages/rainbow-fish-dice-roller-mobile/shared/coverage/lcov.info
          flags: shared

  # iOS build and test
  build-ios:
    name: Build iOS App
    runs-on: macos-14
    needs: test-shared
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ env.XCODE_VERSION }}

      - name: Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.0'
          bundler-cache: true

      - name: Install dependencies
        run: |
          cd packages/rainbow-fish-dice-roller-mobile
          npm ci

      - name: Install CocoaPods
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/ios
          npm run pod-install

      - name: Run iOS tests
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/ios
          npm test

      - name: Build iOS app
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/ios
          npm run build

      - name: Archive iOS app (Release only)
        if: github.ref == 'refs/heads/main'
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/ios
          npm run build:release

      - name: Upload iOS artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: ios-build
          path: packages/rainbow-fish-dice-roller-mobile/ios/ios/RainbowFishDiceRoller.xcarchive

  # Android build and test
  build-android:
    name: Build Android App
    runs-on: ubuntu-latest
    needs: test-shared
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: |
          cd packages/rainbow-fish-dice-roller-mobile
          npm ci

      - name: Run Android tests
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/android
          npm test

      - name: Build Android APK
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/android
          npm run build

      - name: Build Android Release (Release only)
        if: github.ref == 'refs/heads/main'
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/android
          npm run build:release

      - name: Build Android Bundle (Release only)
        if: github.ref == 'refs/heads/main'
        run: |
          cd packages/rainbow-fish-dice-roller-mobile/android
          npm run build:bundle

      - name: Upload Android artifacts
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v4
        with:
          name: android-build
          path: |
            packages/rainbow-fish-dice-roller-mobile/android/android/app/build/outputs/apk/release/
            packages/rainbow-fish-dice-roller-mobile/android/android/app/build/outputs/bundle/release/

  # Security scanning
  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Snyk to check for vulnerabilities
        uses: snyk/actions/node@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          args: --all-projects --severity-threshold=high

  # Deploy to staging
  deploy-staging:
    name: Deploy to Staging
    runs-on: ubuntu-latest
    needs: [build-ios, build-android]
    if: github.ref == 'refs/heads/develop'
    environment: staging
    steps:
      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID_STAGING }}
          serviceCredentialsFileContent: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
          groups: internal-testers
          file: packages/rainbow-fish-dice-roller-mobile/android/android/app/build/outputs/apk/release/app-release.apk

  # Deploy to production
  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [build-ios, build-android, security-scan]
    if: github.ref == 'refs/heads/main'
    environment: production
    steps:
      - name: Deploy iOS to App Store
        uses: apple-actions/upload-testflight-build@v1
        with:
          app-path: packages/rainbow-fish-dice-roller-mobile/ios/ios/RainbowFishDiceRoller.xcarchive
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_API_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}

      - name: Deploy Android to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
          packageName: com.chasewhiterabbit.rainbowfishdiceroller
          releaseFiles: packages/rainbow-fish-dice-roller-mobile/android/android/app/build/outputs/bundle/release/app-release.aab
          track: production
